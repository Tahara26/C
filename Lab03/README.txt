Justin Tahara

The lab started off with making our own functions with the names provided in the MatrixMath.h header file. Getting the names and actually giving the functions their own job to fulfill was quite difficult. After the functions have been completed, we would move to the mml.c source file and begin our unit testing. You would setup some test Matrices that would be used and also figure out the resultant matrices for each different function. Then you would compare the outputs to the hardcoded matrix you typed in and make sure they are the same. Then you increment a counter in order to later print out how many tests passed. Once you go through all of the functions and make sure they are correct, at the end you have a separate test for your matrix print function and see if the output is the same and then you are done. The lab had many important aspects pertaining to the detail that was put in the lab manual to describe all of the steps in order to complete the lab. I believe that the functions were a very important aspect of the lab and the lab manual did an alright job of describing the procedures but then the MathMatrix.h header file contained more details on how to make the functions so that was good. The Unit Testing portion of the lab seemed more vague and less informative. The lab manual make it very difficult for me to understand what steps we needed to take in order to complete the Unit Testing portion of the lab. If there were more examples to show how to do that section, this lab could have been a little bit more easier. 

I read through the lab manual many times and then looked at the header file that was provided to find further details. There were many things wrong at the beginning with certain functions not working correctly. At times I just rewrote my functions in order to fix the problem of wrong outputs. Sometimes I used my MatrixPrint function to see what matrix it was outputting. The floating point error was very difficult and needed to have an exact hardcoded matrix in order for it to work properly with my test matrices in my lab. Many of the simpler functions like add and scalar add worked very well. If I were to do this lab again I would make sure all my functions worked fine and first make test Matrices that were much simpler and change them after all the functions worked correctly.  worked with many of the TA’s in the lab sections to get help with the lab. They guided me in a way without telling me the answer but also helping me figure out the solution to my own problems.

I think it ended up fairly well but that was with the help of many TA’s. I would say I spent roughly 16 hours on this lab in total over the span of the week. I liked the part when my code finally worked and it did what I wanted to do. I disliked many parts of this lab such as debugging and also finding out why there were certain errors in my lab. Many small mistakes led to failing builds and other problems that took a lot of time in order to fix. I do not think this lab was that worthwhile. I do not feel like I have accomplished a lot for the amount of time I have put in. I believe there were many functions in this lab and in the span of 1 week we had to implement all of these functions which is quite a difficult task. Maybe extending the lab or reducing the amount of functions could have helped. The hardest parts of this lab was actually understanding the logic and how to implement the right code in order to act out the logic in the simulator. I believe the point distribution is fair due to the fact that the distribution gives more weight to the functions and the correct test function in the mml.c file than the actual formatting or smaller details like other professors. I do not believe the lab manual covered enough detail because I had to ask the TA’s multiple questions at lab and the TA’s themselves could not answer the questions. The examples in class were very basic examples and so they were not that useful. I believe more teaching of the concepts is necessary in order to solidify our understanding of the lab in order to complete the lab more smoothly. 