Justin Tahara

The lab was very similar to the last lab but instead of hardcoded inputs we are taking in user inputs thus making the lab a little bit different. In this lab we made a reverse polish notation calculator or RPN for short that calculates a little bit different than a ordinary calculator. It takes in two numbers and then the operator and completes the operator on the two numbers it took in. In order to implement this into our lab we needed to make functions that utilized stacks and pushes and pops out floats and eventually prints the result. The user input is taken in as a string and then broken up into tokens and that is how the pushes and pops are able to utilize the stack. We also needed to include error handling for certain cases were there were invalid inputs by the user. The lab manual had good instructions guiding me in the right direction but I do still believe the manual can use some more examples and uses of the code that is to be expected in the lab. The error handling was a very important aspect of the lab due to the fact that there is many errors that need to be caught in the process of analyzing the string. But besides that I believe the lab was pretty straight forward.

I read through the manual first to understand the steps in order to complete the lab and so I went on to work on my functions first. After I made the functions, I proceeded to move onto the tests to see if my functions were working properly. At first my functions were not working properly so I had to fix the issues that were present before I moved on. After that I began making the calculator itself in rpn.c. The main code itself was not as hard as the functions because the operators work in a similar fashion and so it was not too difficult to format the code. If I were to do this lab again I would test more throughly when making the functions rather than doing it after I finished coding all of the functions. I asked many TAâ€™s how the code should flow in terms of order and I did not ask my classmates questions. 

I believe my lab turned out alright. It seems to follow all of the guidelines and works properly. I spent quite a decent amount of time on the lab this week as well accumulating to around 14 hours in total I believe. I loved it when the first result was outputted and was actually correct proving my functions and my code was working correctly. The things I did not like about the lab was all of the debugging that occurred in my code due to simple mistakes and careless errors throughout the code. I believe this lab was worthwhile because I did learn new code and also a different type of calculator in the process. I would maybe suggest more information on the error handling section of the lab and maybe some form of examples to help the students how to catch the errors. Hardest parts of the lab was probably the rpn.c file where there were many if statements in my case thus making the code very confusing and harder to read. The point distribution seemed fair. I believe the lab manual was sufficient in providing enough detail to start the lab but not enough to go through the whole lab without asking many questions. Examples in class did help in the process of learning the code for the lab. 