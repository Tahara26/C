Justin Tahara

Battle Boats Partner: Rayne Jones rarjones@ucsc.edu

This lab is broken up into three different parts. Before doing any of the parts the user must set up a Leds.h file to use for this lab and future labs as well. The first actual part is the LED bounce part where the LEDs will bounce from one side to the other and keep doing this in a infinite loop. There is also switches that slows down the speed of the bounce with each switch that is up. I believe the ISR part of part 1 was very unclear in the lab manual and I had a difficult time understanding what it was that I had to do in this section specifically the ISR part. The next part is the ADC with the dial and converting the number into a percentage and displaying it on the OLED. Setting up the ISR for this part was also very crucial. Using simple algebra and sprintf and OledDrawString, the user is able to display the values onto the OLED in the Pic32. The third part of the lab is the button and switches changing the state of the LEDs on the board. The user must first set up the Buttons.c file and make all of the functions declared in the Buttons.h file and then they may move on. The lab manual was very vague on what to do in this section. The next step is to make the ISR in this part and make sure it checks for events and then finally implement the main that checks the switch states. 

My approach to the lab was to read through the lab manual to understand the lab and then I proceeded to go to the lab section on Friday to get further help. I believe steps I took were a little bit different then how the lab manual wanted us to go through the steps so I had some mistakes here and there where I had to go back and fix. Both part 1 and 2 went fairly well with little to no hiccups coming about. Part 3 was the main issue that had many mistakes and needed to be fixed multiple times. If I were to do this lab differently the next time I approach it, I would probably work more on the Buttons.c before going to the part3.c file because many of my problems were in the Buttons.c file. I mainly only used the help from the TAâ€™s at section for help and clarification on the labs. 

I completed all of the parts except the extra credit. I spent roughly the same amount of time as last week which is about 20 hours I would like to say. I loved the application of hardware into out labs since I am a CE major. I disliked the logic and amount of checks that needed to be done in order to perform the correct result but other than that the lab was pretty straight forward. The concept of debouncing was very hard to understand as well. I believe it was a worthwhile lab because we learned how to implement code for hardware. I would help students understand the ButtonsCheckEvents function with more clarity because that is the step that took me the longest. If there was pseudocode for that it would be very helpful. The hardest parts of the lab was definitely part 3 with both the creation of Buttons.c and the main function in the part3.c. The point distribution did seem very fair. The lab manual was probably enough to start the lab but no where close to helping us finish the lab. The examples in class helped a little bit with understanding debouncing but it was still very difficult to understand. I would appreciate more in depth descriptions of some of the harder functions in each lab for future reference. 